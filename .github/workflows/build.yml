name: Build

env:
  QUAY_BASE: quay.io/jlebon/workstation
  FEDORA_SILVERBLUE: quay.io/fedora/fedora-silverblue

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * 6'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  query:
    name: "Query Fedora versions"
    runs-on: ubuntu-latest
    outputs:
      latest: ${{steps.query_versions.outputs.latest}}
      matrix: ${{steps.query_versions.outputs.matrix}}
    steps:
      - name: Query Fedora versions
        id: query_versions
        run: |
          set -xeuo pipefail
          latest_supported=$(curl -s -L https://fedoraproject.org/releases.json | jq -r '[.[].version|select(test("^[0-9]+$"))]|max')
          next_supported=$((latest_supported + 1))
          previous_supported=$((latest_supported - 1))
          echo "matrix=$(seq $previous_supported $next_supported | jq -cnR '[inputs]')" >> $GITHUB_OUTPUT
          echo "latest=$latest_supported" >> $GITHUB_OUTPUT
  build-workstation:
    name: "Build Workstation container images"
    needs: query
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        releasever: ${{fromJson(needs.query.outputs.matrix)}}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.0
      - name: Check out repository
        uses: actions/checkout@v4
      # cargo-culted from rpm-ostree CI
      # https://github.com/containers/podman/discussions/17362
      - name: Get newer podman
        run: |
          set -xeuo pipefail
          echo 'deb [trusted=yes] https://ftp.debian.org/debian/ testing main' | sudo tee /etc/apt/sources.list.d/testing.list
          sudo apt update
          sudo apt install -y crun/testing podman/testing skopeo/testing
          # Something is confused in latest GHA here
          sudo rm /var/lib/containers -rf
      - name: Build
        run: |
          set -xeuo pipefail
          n=${{ matrix.releasever }}
          podman build --security-opt=seccomp=unconfined --from $FEDORA_SILVERBLUE:$n -t "${{ env.QUAY_BASE }}:$n" .
      - name: Push
        run: |
          set -xeuo pipefail
          mkdir -p ~/.docker
          cat > ~/.docker/config.json <<EOF
          ${{ secrets.QUAY_AUTH }}
          EOF
          n=${{ matrix.releasever }}
          podman push "$QUAY_BASE:$n"
          if [[ $n == ${{ needs.query.outputs.latest }} ]]; then
            podman tag "$QUAY_BASE:$n" "$QUAY_BASE:latest"
            podman push "$QUAY_BASE:latest"
          fi
          rm ~/.docker/config.json
      - name: Update README and Containerfile
        if: ${{ matrix.releasever == needs.query.outputs.latest }}
        run: |
          # This is load-bearing: GitHub will disable the job if the repo
          # doesn't stay active.  Do not enable branch protection for main;
          # it'll break this.
          set -xeuo pipefail
          git config user.name 'Jonathan Lebon'
          git config user.email jonathan@jlebon.com
          sed -i "s/updated-.*-green/updated-$(date +%Y--%m--%d)-green/" README.md
          sed -i "s,$FEDORA_SILVERBLUE:.*,$FEDORA_SILVERBLUE:${{ matrix.releasever }}," Containerfile
          git add README.md Containerfile
          if git diff --quiet --staged --exit-code; then
            echo "README.md already up to date"
            exit 0
          fi
          git commit -m "README.md: update build date"
          git push
